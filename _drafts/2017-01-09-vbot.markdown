---
layout:     post
title:      "vbot - JSON based visual regression tester"
subtitle:   "A command line tool to do visual regression testings, supporting interaction flows with JSON based schema without writing any JS code."
date:       2017-01-09 12:00:00 +0800
author:     "Katat Choi"
---

## Motivations
for the front end, even small updates to the code, may requires a lot of interactions on the page in order to see the changes. The aims of vbot is to help developers quickly create tests with minimum development overhead, and automating the testings "headlessly" at local dev environment or on a continuous integration server, supports integration testings which include both front end and backend.

### Agile process
The key of [agile development](http://agilemanifesto.org/) process is to code up a working software, enabling users to interact with the software, and collecting the feedbacks as soon as possible. Then we repeat this process as sprints until all the requirements have been satisfied. The process no doubt would introduce lots of changes to the code, as the requirements keep evolving, and probably need refactors to the source codes. With the tests covering the functionalities built in earlier sprints will keep the refactor works more stable and give developers confidences to make necessary changes to maintain the health status of the source codes.

Visual regression test help quickly gather visual feedbacks for changes, making it easier to test the components used in different parts of the web applications. Also VRT can be used as a part of integration test, which includes both the frontend and backend.

### Tedious testings in SPA
Single Page Application or any complicated web applications, normally includes many interactions in different views, and the states of a view could depend on the previous views's states. Manual testing on this type of application could involve a lot of clicks and typings just for a single function. It is really dull for a creative developer to do this kind of testings work, and probably would waste a huge amount of time to dig out a bug. The worse is that eventually it kills the developers' motivation for doing the dull repeated works without a proper automated testing tool.

### Collaborate on dirty works
It is usual to see different developers works on the same code for the time being, and mess up the code at some point. It is also common to see there are codes at different places having the same functionality, and decided to refactor it into a component to be reusable, but fear of the uncertain amount of time needed for the testings at different places.

Automated tests is an efficient way to pass on the works among team members. It eases the learning curve at the code written by others, and encourage them to make bold changes to the code when necessary to maintain the health status of the code, and balance the technical debt in a long run.

Every time when there is a pull request, visual regression test can be used as a integration test tool, reduce the testing efforts for every pull requests and be more confident on the release cycles.

## existing visual regression test solutions
### [BackstopJS](https://github.com/garris/BackstopJS)

Suitable for static web pages. As it states in its github page.
>BackstopJS may be just the thing if you develop custom WordPress, Drupal or other CMS templates

### [PhantomCSS](https://github.com/Huddle/PhantomCSS)
Need to writing testing JS code in [Casperjs](http://casperjs.org) framework.

## why vbot, what it brings compared to others
### easy to make interaction flows
JSON based schema to defined view interactions, without writing casper/phantomjs code. Easy to create the interaction flow

because most of the common interactions are: assert, screenshot, click, scroll, these interactions are defined in the vbot JSON schema to cover most of the interaction use cases.

### easy to distribute among the team
JSON based schema makes it much easier to share test schema with the team members, as it has common understandings over the definitions, avoid monkey JS test codes.

### take care of SPA use cases
SPA usually has pretty complicated functions inside a same view to interact with. A JSON based action flow definition could simplify the process of creating these types of tests.

## technical parts
### what vbot based on?
- casperjs
- phantomjs
- phantomcss

## how to use
### schema definitions
### test results
examples

## what in plan
- support mocking http requests
